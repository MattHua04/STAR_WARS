#ifndef GRAPHICS_H
#define GRAPHICS_H

#include "globals.h"
#include "game.h"
#include "doublyLinkedList.h"
#include "menu.h"
#include "users.h"

#define WIDTH 128
#define HEIGHT 128

const char ENEMY_IMGS[13][122] = {
    "00000000000000000000000000000000000000000000000W555W0005553W5W355505553W35550005R333R5000005RRR500000005R5000000000500000",
    "0000000R0000000000R000000000RRR00000000RRR00000W555WR005553W5W355505553W35550005R333R5000005RRR500000005R5000000000500000",
    "000R0000000000R000000000RRR00000000RRR00000000RW555W0005553W5W355505553W35550005R333R5000005RRR500000005R5000000000500000",
    "00000R000000000RRR00000000RRR0000000RRRRR00000RW555WR005553W5W355505553W35550005R333R5000005RRR500000005R5000000000500000",
    "00000000000000000000000000000000000000000000000RRRRR000RRRRRRRRRRR0RRRRRRRRR000RRRRRRR00000RRRRR0000000RRR000000000R00000",
    "000R0000000000R000000000RRR00000000RRR00000000RRRRRR000RRRRRRRRRRR0RRRRRRRRR000RRRRRRR00000RRRRR0000000RRR000000000R00000",
    "0000000R0000000000R000000000RRR00000000RRR00000RRRRRR00RRRRRRRRRRR0RRRRRRRRR000RRRRRRR00000RRRRR0000000RRR000000000R00000",
    "00000R000000000RRR00000000RRR0000000RRRRR00000RRRRRRR00RRRRRRRRRRR0RRRRRRRRR000RRRRRRR00000RRRRR0000000RRR000000000R00000",
    "0000000000000R0R0R0R00RR0000000RR00RR000RR00R0RW555WR0R500350530050550000055000000000000R005R0R500R005R000R50000000000000",
};

const char PLAYER_IMGS[13][122] = {
    "000005000000000555000000005X500000005XXX500000055X5500000055W550000055W3W55000555W3W5550XXXXW3WXXXX0000W5W000000000500000",
    "000005000000000555000000005X500000005XXX500000055X5500000055W550000055W3W55000555W3WX550XXXXW3XXXXX0000W5XXXX00000050XX00",
    "000005000000000555000000005X500000005XXX500000055X5500000055W550000055W3W5500055XW3W5550XXXXX3WXXXX0XXXX5W000000XX0500000",
    "000005000000000555000000005X500000005XXX500000055x5500000055W550000055W3W5500055XW3WX550XXXXX3XXXXX00XXXXXXX000000XXX0000",
    "00000R000000000RRR00000000RRR0000000RRRRR000000RRRRR000000RRRRR00000RRRRRRR000RRRRRRRRR0RRRRRRRRRRR0000RRR000000000R00000",
    "00000R000000000RRR00000000RRR0000000RRRRR000000RRRRR000000RRRRR00000RRRRRRR000RRRRRRRRR0RRRRRRRRRRR0000RRRRRR000000R0RR00",
    "00000R000000000RRR00000000RRR0000000RRRRR000000RRRRR000000RRRRR00000RRRRRRR000RRRRRRRRR0RRRRRRRRRRR0RRRRRR000000RR0R00000",
    "00000R000000000RRR00000000RRR0000000RRRRR000000RRRRR000000RRRRR00000RRRRRRR000RRRRRRRRR0RRRRRRRRRRR00RRRRRRR000000RRR0000",
    "00X00000X00500000000050505X0X50500X0050500X0000050500000X0005000X05500030005500XX535XX000XX0W3W0XX0X000W5W000X00X00500X00",
};

const char BOSS_IMGS[13][362] = {
    "0000000000000000000000000000000000000000005500000005500000000055005005500000000000555355500000000000005535500000000000000053500000000000000005W50000000055W300005W500003W55055W30055W55003W5500055W305555503W550000055W5555555W55000000055555555555000000000555W5W55500000000000055W55000000000000005RRR5000000000000005RRR50000000000000005R5000000000000000005000000000",
    "0000000000000000000000000000000000000000005500000005500000000055005005500000000000555355500000000000005535500000000000000053500R00000000000005W500R0000055W300005W500RR3W55055W30055W550RRW5500055W30555550RW550000055W5555555W55000000055555555555000000000555W5W55500000000000055W55000000000000005RRR5000000000000005RRR50000000000000005R5000000000000000005000000000",
    "00000000000000000000000000000000000000000055000000055000000000550050055000000000005553555000000000000055355000000000000R005350000000000000R005W50000000055W3RRR05W500003W55055WRRR55W55003W5500055WRR5555503W550000055W5555555W55000000055555555555000000000555W5W55500000000000055W55000000000000005RRR5000000000000005RRR50000000000000005R5000000000000000005000000000",
    "000000000R000000000000000000R00000000000005500RRR005500000000055RRRRR550000000000055R3R55000000000000055355000000000000R0053500R0000000000R005W500R0000055W3RRR05W50RRR3W55055WRRR55W55RRRW5500055WRR55555RRW550000055W5555555W55000000055555555555000000000555W5W55500000000000055W55000000000000005RRR5000000000000005RRR50000000000000005R5000000000000000005000000000",
    "000000000000000000000000000000000000000000RR0000000RR000000000RR00R00RR00000000000RRRRRRR0000000000000RRRRR000000000000000RRR0000000000000000RRR00000000RRRR0000RRR0000RRRR0RRRR00RRRRR00RRRR000RRRR0RRRRR0RRRR00000RRRRRRRRRRRRR0000000RRRRRRRRRRR000000000RRRRRRRRR000000000000RRRRR00000000000000RRRRR00000000000000RRRRR000000000000000RRR00000000000000000R000000000",
    "000000000000000000000000000000000000000000RR0000000RR000000000RR00R00RR00000000000RRRRRRR0000000000000RRRRR000000000000000RRR00R0000000000000RRR00R00000RRRR0000RRR00RRRRRR0RRRR00RRRRR0RRRRR000RRRR0RRRRR0RRRR00000RRRRRRRRRRRRR0000000RRRRRRRRRRR000000000RRRRRRRRR000000000000RRRRR00000000000000RRRRR00000000000000RRRRR000000000000000RRR00000000000000000R000000000",
    "000000000000000000000000000000000000000000RR0000000RR000000000RR00R00RR00000000000RRRRRRR0000000000000RRRRR000000000000R00RRR0000000000000R00RRR00000000RRRRRRR0RRR0000RRRR0RRRRRRRRRRR00RRRR000RRRRRRRRRR0RRRR00000RRRRRRRRRRRRR0000000RRRRRRRRRRR000000000RRRRRRRRR000000000000RRRRR00000000000000RRRRR00000000000000RRRRR000000000000000RRR00000000000000000R000000000",
    "000000000R000000000000000000R0000000000000RR00RRR00RR000000000RRRRRRRRR00000000000RRRRRRR0000000000000RRRRR000000000000R00RRR00R0000000000R00RRR00R00000RRRRRRR0RRR0RRRRRRR0RRRRRRRRRRRRRRRRR000RRRRRRRRRRRRRRR00000RRRRRRRRRRRRR0000000RRRRRRRRRRR000000000RRRRRRRRR000000000000RRRRR00000000000000RRRRR00000000000000RRRRR000000000000000RRR00000000000000000R000000000",
    "000000000000000000000000000000000000000000550000000550000000005500500550000000R0005553555000R0000000R0553550R00000000R00005W50000R00000000R005W500R00000333000R05550R000333WW5500RR353RR0055WW555550R50305R0555550005000555550005000R00000555055500000R00000555W0W55500000000000055055000000000R0000500050000R00000R005R000R500R000000005R00000R5000000000R000000000R0000",
};

/**
 * Returns the hex equivalent of a char color
 */
int getHexColor(char color);

/**
 * Draws an image in the form of a string of chars with specified dimensions at a cord on screen
 */
void drawImg(const char* object, int x, int y, int width, int height);

/**
 * Draws a box bounded by a top left and bottom right cord
 */
void drawBox(int topLeftX, int topLeftY, int bottomRightX, int bottomRightY, char color);

/**
 * Draws the player
 */
void drawPlayer(LLNode* player);

void erasePlayer(LLNode* player);

/**
 * Draw an enemy
 */
void drawEnemy(LLNode* enemy);

void eraseEnemy(LLNode* enemy);

/**
 * Draws a final boss
 */
void drawBoss(LLNode* boss);

void eraseBoss(LLNode* boss);

/**
 * Draws player projectile depending on attack type
 */
void drawPlayerProjectile(LLNode* projectile);

void erasePlayerProjectile(LLNode* projectile);

/**
 * Draws enemy projectile depending on enemy type
 */
void drawEnemyProjectile(LLNode* projectile);

void eraseEnemyProjectile(LLNode* projectile);

/**
 * Draws boss projectile depending on attack type
 */
void drawBossProjectile(LLNode* projectile);

void eraseBossProjectile(LLNode* projectile);

/**
 * Draws a healthBar
 */
void drawHealthBar(LLNode* healthBar);

void eraseHealthBar(LLNode* healthBar);

/**
 * Draws a superAttackStatus
 */
void drawSuperAttackBar(LLNode* player);

void eraseSuperAttackBar(LLNode* player);

/**
 * Draws skin selector button
 */
void drawSSButton(MENU_SETTINGS* menuSettings, BUTTON* skinSelector);

/**
 * Draws game mode selector button
 */
void drawMSButton(MENU_SETTINGS* menuSettings, BUTTON* modeSelector);

/**
 * Draws pause button
 */
void drawPaused(void);

void erasePaused(void);

/**
 * Draws resume button
 */
void drawResumed(void);

void eraseResumed(void);

/**
 * Draws menu play button
 */
void drawPlayButton(MENU_SETTINGS* menuSettings, BUTTON* play);

/**
 * Draws difficulty slider
 */
void drawDiffScale(MENU_SETTINGS* menuSettings, SLIDING_SCALE* difficulty);

/**
 * Draws user stats button
 */
void drawUserStatsButton(USER* user, BUTTON* userStats);

/**
 * Draws delete user button
 */
void drawDeleteUserButton(BUTTON* deleteProfile);

/**
 * Draws login background
 */
void drawLoginBackground(void);

/**
 * Draws registration background
 */
void drawRegistrationBackground(void);

/**
 * Draws menu background
 */
void drawMenuBackground(void);

/**
 * Draws user stats and background
 */
void drawUserStatsBackground(USER* user);

/**
 * Draws login button
 */
void drawLoginButton(BUTTON* button);

/**
 * Draws login button for invalid credentials
 */
void drawInvalidLoginButton(BUTTON* button);

/**
 * Draws register button
 */
void drawRegisterButton(BUTTON* button);

/**
 * Draws username base button
 */
void drawUserBaseButton(USER* userInfo, BUTTON* button);

/**
 * Draws username number button
 */
void drawUserNumButton(USER* userInfo, BUTTON* button);

/**
 * Draws back button
 */
void drawBackButton(BUTTON* button);

/**
 * Draws next button
 */
void drawNextButton(BUTTON* button);

/**
 * Draws invalid next button
 */
void drawInvalidNextButton(BUTTON* button);

/**
 * Draws delete button
 */
void drawDeleteButton(BUTTON* button);

/**
 * Draws zero button
 */
void drawZeroButton(BUTTON* button);

/**
 * Draws one button
 */
void drawOneButton(BUTTON* button);

/**
 * Draws two button
 */
void drawTwoButton(BUTTON* button);

/**
 * Draws three button
 */
void drawThreeButton(BUTTON* button);

/**
 * Draws four button
 */
void drawFourButton(BUTTON* button);

/**
 * Draws five button
 */
void drawFiveButton(BUTTON* button);

/**
 * Draws six button
 */
void drawSixButton(BUTTON* button);

/**
 * Draws seven button
 */
void drawSevenButton(BUTTON* button);

/**
 * Draws eight button
 */
void drawEightButton(BUTTON* button);

/**
 * Draws nine button
 */
void drawNineButton(BUTTON* button);

/**
 * Draws user default skin button
 */
void drawDefaultSkinButton(USER* userInfo, BUTTON* button);

/**
 * Draws password
 */
void drawPassword(char password[5]);

/**
 * Draws invalid password
 */
void drawInvalidPassword(char password[5]);

/**
 * Draws winning screen
 */
void drawGameWon(void);

/**
 * Draws loosing screen
 */
void drawGameLost(void);
 
#endif // GRAPHICS_H
